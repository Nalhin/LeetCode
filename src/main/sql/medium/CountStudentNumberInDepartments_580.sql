-- #A university uses 2 data tables, student and department, to store data about it
-- #s students and the departments associated with each major.
-- #
-- # Write a query to print the respective department name and number of students m
-- #ajoring in each department for all departments in the department table (even one
-- #s with no current students).
-- #
-- # Sort your results by descending number of students; if two or more departments
-- # have the same number of students, then sort those departments alphabetically by
-- # department name.
-- #
-- # The student is described as follow:
-- #
-- #
-- #| Column Name  | Type      |
-- #|--------------|-----------|
-- #| student_id   | Integer   |
-- #| student_name | String    |
-- #| gender       | Character |
-- #| dept_id      | Integer   |
-- #
-- #
-- # where student_id is the student's ID number, student_name is the student's nam
-- #e, gender is their gender, and dept_id is the department ID associated with thei
--                                                                                                                                                                                             #r declared major.
-- #
-- # And the department table is described as below:
-- #
-- #
-- #| Column Name | Type    |
-- #|-------------|---------|
-- #| dept_id     | Integer |
-- #| dept_name   | String  |
-- #
-- #
-- # where dept_id is the department's ID number and dept_name is the department na
-- #me.
-- #
-- # Here is an example input:
-- #student table:
-- #
-- #
-- #| student_id | student_name | gender | dept_id |
-- #|------------|--------------|--------|---------|
-- #| 1          | Jack         | M      | 1       |
-- #| 2          | Jane         | F      | 1       |
-- #| 3          | Mark         | M      | 2       |
-- #
-- #
-- # department table:
-- #
-- #
-- #| dept_id | dept_name   |
-- #|---------|-------------|
-- #| 1       | Engineering |
-- #| 2       | Science     |
-- #| 3       | Law         |
-- #
-- #
-- # The Output should be:
-- #
-- #
-- #| dept_name   | student_number |
-- #|-------------|----------------|
-- #| Engineering | 2              |
-- #| Science     | 1              |
-- #| Law         | 0              |
-- #
-- # 👍 125 👎 22

-- Runtime: 678 ms, faster than 52.99% of MySQL online submissions for Count Student Number in Departments.
-- Memory Usage: 0B, less than 100.00% of MySQL online submissions for Count Student Number in Departments.

-- #leetcode submit region begin(Prohibit modification and deletion)
-- # Write your MySQL query statement below
SELECT dept_name, COUNT(student_id) AS student_number
FROM department
         LEFT JOIN student USING (dept_id)
GROUP BY dept_id
ORDER BY student_number DESC;
-- #leetcode submit region end(Prohibit modification and deletion)
